//Copyright (c) 2013 Rice University
// This software is subject to the provisions of the GNU AFFERO GENERAL PUBLIC LICENSE Version 3.0 (AGPL).
// See LICENSE.txt for details.

/* ============================================
 * CUSTOMIZED: originally ccap-numbering.less
 * ============================================
 */
// This numbering file was derived from the parent file (ccap-numbering.less) to utilize a new counter
// called try-it in the PreCalculus text.  The numbering of Try-it needs to increment per each occurence
// in sections and reset on each Chapter.  Cannot use existing numbering of exercises (Try It is actually
// an exercise wrapped in a feature) and must have an independent counter.


// Unchanged from ccap-numbering.less
@S: ""; //" ["; // "S"tart and "E"nd marking text for debugging
@E: ""; //"] ";

// Unchanged from ccap-numbering.less
@preface: "Preface";
@chapter: "Chapter";
@appendix: "Appendix";
@example: "Example ";
@exercise: "Exercise ";
@figure: "Figure ";

div.book {

  // Unchanged from ccap-numbering.less
  div.chapter { counter-increment: chapter; }


  // Unchanged from ccap-numbering.less
  > div.preface   { .x-prefixed(@preface, "", ""); }
  div.chapter     { .x-prefixed(@chapter,  counter(chapter, decimal),       target-counter(attr(href), chapter), "." ); }
  > div.appendix  { .x-prefixed(@appendix, counter(appendix, upper-latin),  target-counter(attr(href), appendix, upper-latin) ); }

  // Unchanged from ccap-numbering.less
  .x-prefixed(@part-label, @part-counter, @part-target, @part-separator: "") {

    /* --------------------------------------
     *  CUSTOMIZED: added reset for try-it;
     * --------------------------------------
     */
    counter-reset: section figure subfigure table equation example exercise footnote toc-section try;

    // Unchanged from ccap-numbering.less
    .x-increment(@counter-name) {
      &:not(.labeled) { counter-increment: @counter-name; }
      counter-increment: @counter-name;
      &.labeled { counter-increment: none; }
    }

    /* -----------------------------------------------------
     *   CUSTOMIZED: Increment the counter for try-it feature
     * ------------------------------------------------------
     */
    .precalculus.try { .x-increment(try); }
    
    // Unchanged from ccap-numbering.less
    .x-unlabeled(@contents) {
      &:not(.labeled)::before { content: @S @contents @E; }
    }

    // Unchanged from ccap-numbering.less
    .x-test-text(@label, @counter-name, @suffix: " ") {
      .x-unlabeled(@label @part-counter @part-separator counter(@counter-name) @suffix);
    }

    /* ---------------------------------------------------
     *  CUSTOMIZED: Display the counter for try-it feature
     * ---------------------------------------------------
     */
    .precalculus.try > .title {
      .x-test-text ("", try);
    }
  } // .x-prefixed()
}


