
.x-solutions-subheading-style() {
  margin-top: 7.5px;
  color: @medium-blue;
  text-transform: uppercase;
}

#part {
  #chapter {
    #learning-objectives {
      #listitem {
        .style() {
          display: list-item;
        }
      }
      #before {
        .style() {
          display: none;
        }
      }
    }
  }
  #chapter-end {
    .style('review-conceptual-questions') {
      margin-bottom: 26px;
    }
    .style('review-problems') {
      margin-bottom: 26px;
    }
    .style('review-additional-problems') {
      margin-bottom: 26px;
    }
    .style('review-challenge') {
      margin-bottom: 26px;
    }
    #title {
      .style(...) {
        margin-bottom: 0px;
      }
      .style('chapter-review'; chapter) {
        padding-top: 9px;
        -webkit-column-span: all;
        column-span: all;
      }
      .style('chapter-review'; chapter; title) {
        padding: 0px;
      }
      .style('chapter-review'; chapter; section; title) {
        padding-top: 9px;
        padding-bottom: 4px;
        text-transform: none;
      }
      .style('review-conceptual-questions') {
          padding-bottom: 6px;
      }
      .style('review-problems') {
        padding-bottom: 6px;
      }
      .style('review-additional-problems') {
          padding-bottom: 12px;
      }
      .style('review-challenge') {
          padding-bottom: 12px;
      }
    }
    #exercise {
      .style() {
         page-break-inside: auto;
         &::last-child {
          page-break-inside: auto;
         }
       }
    }
  }
  #book-end {
    #end-of-book-solutions {
      #title {
        .style(check-understanding) {
          .x-solutions-subheading-style();
          #l10n>.content-string(check-understanding; eob-solutions);
          font-size: 13px;
          page-break-after: avoid;
        }
        .style(review-conceptual-questions) {
          .x-solutions-subheading-style();
          #l10n>.content-string(review-conceptual-questions; eob-solutions);
          font-size: 13px;
          page-break-after: avoid;
        }
        .style(review-problems) {
          .x-solutions-subheading-style();
          #l10n>.content-string(review-problems; eob-solutions);
          font-size: 13px;
          page-break-after: avoid;
        }
        .style(additional-problems) {
          .x-solutions-subheading-style();
          #l10n>.content-string(additional-problems; eob-solutions);
          font-size: 13px;
          page-break-after: avoid;
        }
        .style(review-challenge) {
          .x-solutions-subheading-style();
          #l10n>.content-string(review-challenge; eob-solutions);
          font-size: 13px;
          page-break-after: avoid;
        }
      }
    }
  }
}
#content {
  #media-object {
    .style(any; example) {
      text-align: center;
    }
    .style('list-item'; example) {
      text-align: center;
    }
  }
  #image {
    .style(any; example) {
      display: inline-block;
    }
    .style('list-item'; example) {
      display: inline-block;
    }
  }
  #note {
    .style(equation-callout) {
      #content>#note>.style(problem-solving);
      padding-top: 13px;
    }
    .style(check-understanding; ...) {
      #content>#note>.style(checkpoint);
    }
    #title {
      .style(@kind; @part; equation-callout) {
        display: none;
      }
    }
  }
  #table {
    .style(any; any) {
      border: none;
    }
    .style('key-equations'; eoc) {
      #utils>#pb>.inside(auto);
    }
    .style(any; chapter; chapter-end; key-equations) {
      #utils>#pb>.inside(auto);
    }
    #header {
      .style(any; any) {
        border-right: none;
        border-bottom-width: 2px;
        padding: 4px 13px;
      }
    }
    #caption {
      .style() {
        font-weight: normal;
      }
    }
    #data {
      .style(any; any) {
        border: none;
        padding: 4px 13px;
      }
    }
  }
  #solution {
    #title {
      .style(any; any; exercise; example) {
        content: initial;
      }
    }
  }
  #paragraph {
    #title {
      .style(any; any; example) {
        #utils>#pb>.before(avoid);
        #utils>#pb>.after(avoid);
      }
    }
  }
}
