// For debugging, mark start and end brackets
@DEBUG_START: ""; //" ["; // "S"tart and "E"nd marking text for debugging
@DEBUG_END: ""; //"] ";


// TODO: remove `default` context

#part {

  // Counters for the various parts of a book
  //
  // - book
  // - preface
  // - chapter
  // - appendix

  // `.counters(@part)   {}`
  .counters(book)     { counter-reset: chapter appendix; }
  .counters(chapter)  { counter-increment: chapter; }
  .counters(appendix) { counter-increment: appendix; }

  // TODO: Move this into `.counters()`. Separated now as `default` because it occurs elsewhere in the CSS
  .counters(default) { counter-reset: section figure subfigure table equation example exercise footnote toc-section; }

  // eoc-section starts at -1 so we can include introduction content
  // TODO: Should `end-part` be in #part or in #content. it is used as a `@context` variable
  .counters(@part; end-part) { counter-reset: /*exercise*/ eoc-section -1; }


  // TODO: Revisit once I get the content labels done
  // .label(@part)     {}
  // .label(preface)   { content: }
  // .label(chapter)   {}
  // .label(appendix)  {}

  // To set the page header to have the current chapter title
  // we need to squirrel away the title.
  // Eventually, this should have a `@part` argument.

  //.squirrel-page-title(@part)     {}
  .squirrel-page-title(preface)   { #l10n>.page-title(preface;  "";                             content()); }
  .squirrel-page-title(chapter)   { #l10n>.page-title(chapter;  counter(chapter,  decimal);     content()); }
  .squirrel-page-title(appendix)  { #l10n>.page-title(appendix; counter(appendix, upper-latin); content()); }

}




// Parts Code
#content {


  // .counters(@type;    @context) {}
  .counters(section;          ) { counter-increment: section; }
  .counters(table;            ) { counter-increment: table; }
  .counters(example;          ) { counter-increment: example; }
  .counters(exercise;         ) { counter-increment: exercise; }
  .counters(equation;         ) { counter-increment: equation; }
  .counters(footnote;         ) { counter-increment: footnote; }
  // Figures are a bit more complicated because:
  //
  // - each new figure resets the subfigure
  // - each subfigure increments subfigure and resets nothing
  .counters(figure;           ) { counter-increment: figure;
                                  counter-reset: subfigure; }
  .counters(figure;   figure)   { counter-increment: subfigure;
                                  // Fix for chromium/webkit bug
                                  counter-reset: none-webkit-bug; }

  .label(@element;  @part;            ) { #l10n>.label(@part;   @element; counter(@element);                                  ); }
  .label(solution;  default;          ) { #l10n>.label(default; solution; target-counter(attr(href, url), exercise);          ); }
  .label(solution;  @part;    @context) { #l10n>.label(@part;   solution; target-counter(attr(href), exercise);       @context); }
  .label(section;   @part;    end-part) { #l10n>.label(@part;   section;  counter(eoc-section);                       end-part); }
  .label(figure;    @part;    figure  ) { #l10n>.label(@part;   subfigure;counter(subfigure, lower-alpha);                    ); }
  .label(problem;   @part;    end-part) { #l10n>.label(@part;   problem;  counter(exercise);                          end-part); }

  // xref is an internal link to another piece of content.
  // TODO: This should use target-text instead of relying on a specific class on the anchor tag.
  #xref {
    // TODO: Text for links to sections
    .content(@element; @part          ) { #l10n>.xref-label(@part; @element;  target-counter(attr(href), @element)); }
    .content(appendix; toc            ) { #l10n>.xref-label(toc;   appendix;  target-counter(attr(href), appendix, upper-latin)); }
    .content(chapter;  toc            ) { #l10n>.xref-label(toc;   chapter;   target-counter(attr(href), chapter, decimal)); }
    .content(figure;   @part; figure  ) { #l10n>.xref-label(@part; subfigure; target-counter(attr(href), figure); target-counter(attr(href), subfigure, lower-latin)); }
  }


  #footnote {
    // Float to the bottom of the page (or maybe `move-to:` for EPUB)
    .style() { float: footnote; }
    .descendants-style() {
      color: black;
      font-weight: normal;
    }
    .marker-style() {
      .descendants-style();
      margin-right: 0.5em;
    }
    .call-content() { content: "[" counter(footnote) "]"; }
    .call-style() {
      // The following are defaults
      font-size: 83%;
      vertical-align: super;
      line-height: none;
      margin-before: 0.5em;
    }

  }

}
